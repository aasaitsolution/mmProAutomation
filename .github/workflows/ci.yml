name: Selenium Tests with Allure History Fix

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # Download existing history from gh-pages
      - name: Download previous Allure history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-history
        continue-on-error: true

      # Prepare test environment with executor info
      - name: Prepare Test Environment
        run: |
          mkdir -p target/allure-results
          
          # Create executor.json
          cat > target/allure-results/executor.json << EOF
          {
            "name": "GitHub Actions",
            "type": "github",
            "url": "${{ github.server_url }}/${{ github.repository }}",
            "buildOrder": ${{ github.run_number }},
            "buildName": "Build #${{ github.run_number }}",
            "buildUrl": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "reportName": "Allure Report",
            "reportUrl": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          EOF
          
          # Create environment.properties
          cat > target/allure-results/environment.properties << EOF
          Browser=Chrome
          Environment=GitHub Actions CI/CD
          Build.Number=${{ github.run_number }}
          Build.Url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          Branch=${{ github.ref_name }}
          Commit=${{ github.sha }}
          Repository=${{ github.repository }}
          Timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          EOF

      - name: Run tests
        run: mvn clean test -Dmaven.test.failure.ignore=true

      - name: Install Allure CLI
        run: |
          wget -q https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
          tar -zxf allure-2.25.0.tgz
          sudo mv allure-2.25.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      # CRITICAL: Copy history BEFORE report generation
      - name: Copy Previous History to Results
        run: |
          echo "=== COPYING PREVIOUS HISTORY ==="
          
          # Create history directory in results
          mkdir -p target/allure-results/history
          
          # Copy existing valid history if it exists
          if [ -d "gh-pages-history/history" ]; then
            echo "Found previous history directory"
            
            # Check if history files have proper format (with buildOrder)
            if [ -f "gh-pages-history/history/history-trend.json" ]; then
              # Check if it's properly formatted
              if jq -e '.[0] | has("buildOrder")' gh-pages-history/history/history-trend.json >/dev/null 2>&1; then
                echo "✅ Found properly formatted history, copying..."
                cp -r gh-pages-history/history/* target/allure-results/history/
                echo "Copied files:"
                ls -la target/allure-results/history/
              else
                echo "⚠️  Found old format history, will regenerate"
              fi
            fi
          else
            echo "No previous history found"
          fi

      # Generate report with history
      - name: Generate Allure Report
        run: |
          echo "=== GENERATING ALLURE REPORT ==="
          allure generate target/allure-results -o target/allure-report --clean
          
          echo "Generated report structure:"
          ls -la target/allure-report/
          
          if [ -d "target/allure-report/history" ]; then
            echo "History directory contents:"
            ls -la target/allure-report/history/
          fi

      # CRITICAL: Fix history format AFTER report generation
      - name: Fix History Format for Trend Graphs
        run: |
          echo "=== FIXING HISTORY FORMAT ==="
          
          # Install jq
          sudo apt-get update && sudo apt-get install -y jq
          
          BUILD_ORDER=${{ github.run_number }}
          REPORT_NAME="Build #${BUILD_ORDER}"
          REPORT_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          cd target/allure-report/history
          
          echo "Current history-trend.json:"
          if [ -f "history-trend.json" ]; then
            cat history-trend.json
          else
            echo "No history-trend.json found!"
            exit 1
          fi
          
          # Check if already properly formatted
          if jq -e '.[0] | has("buildOrder")' history-trend.json >/dev/null 2>&1; then
            echo "✅ History is already properly formatted!"
            echo "Current entries: $(jq '. | length' history-trend.json)"
            
            # Just verify the latest entry has correct build info
            LATEST_BUILD=$(jq -r '.[-1].buildOrder' history-trend.json)
            if [ "$LATEST_BUILD" != "$BUILD_ORDER" ]; then
              echo "Updating latest entry build info..."
              jq --argjson buildOrder "$BUILD_ORDER" \
                 --arg reportName "$REPORT_NAME" \
                 --arg reportUrl "$REPORT_URL" \
                 '.[-1].buildOrder = $buildOrder | .[-1].reportName = $reportName | .[-1].reportUrl = $reportUrl' \
                 history-trend.json > temp.json && mv temp.json history-trend.json
            fi
          else
            echo "⚠️  Converting from old format to new format..."
            
            # Get current data
            CURRENT_DATA=$(jq '.[0].data' history-trend.json)
            
            # Create new format entry
            NEW_ENTRY=$(jq -n \
              --argjson buildOrder "$BUILD_ORDER" \
              --arg reportName "$REPORT_NAME" \
              --arg reportUrl "$REPORT_URL" \
              --argjson data "$CURRENT_DATA" \
              '{
                "buildOrder": $buildOrder,
                "reportName": $reportName,
                "reportUrl": $reportUrl,
                "data": $data
              }')
            
            # Save as new format
            echo "[$NEW_ENTRY]" > history-trend.json
          fi
          
          echo ""
          echo "✅ FINAL history-trend.json:"
          cat history-trend.json | jq '.'
          
          # Fix duration-trend.json similarly
          if [ -f "duration-trend.json" ]; then
            echo ""
            echo "Fixing duration-trend.json..."
            
            if ! jq -e '.[0] | has("buildOrder")' duration-trend.json >/dev/null 2>&1; then
              CURRENT_DURATION=$(jq '.[0].data.duration // 0' duration-trend.json)
              
              NEW_DURATION_ENTRY=$(jq -n \
                --argjson buildOrder "$BUILD_ORDER" \
                --arg reportName "$REPORT_NAME" \
                --arg reportUrl "$REPORT_URL" \
                --argjson duration "$CURRENT_DURATION" \
                '{
                  "buildOrder": $buildOrder,
                  "reportName": $reportName,
                  "reportUrl": $reportUrl,
                  "data": {"duration": $duration}
                }')
              
              echo "[$NEW_DURATION_ENTRY]" > duration-trend.json
            fi
            
            echo "Duration trend fixed:"
            cat duration-trend.json | jq '.'
          fi

      # Create debug page
      - name: Create History Debug Page
        run: |
          cat > target/allure-report/history-debug.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Allure History Debug</title>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
              .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; }
              .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 4px; }
              pre { background: #f8f9fa; padding: 15px; overflow-x: auto; border-radius: 4px; font-size: 12px; }
              .success { border-left: 4px solid #28a745; }
              .warning { border-left: 4px solid #ffc107; }
              h1 { color: #333; text-align: center; }
              h2 { color: #495057; border-bottom: 2px solid #dee2e6; padding-bottom: 10px; }
              .status { padding: 5px 10px; border-radius: 4px; font-weight: bold; }
              .status.ok { background: #d4edda; color: #155724; }
              .status.error { background: #f8d7da; color: #721c24; }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>🔍 Allure History Debug - Build #${{ github.run_number }}</h1>
              <p><strong>Time:</strong> $(date -u +"%Y-%m-%d %H:%M:%S UTC")</p>
          
              <div class="section success">
                <h2>📊 History Trend Data</h2>
                <div id="historyStatus" class="status">Loading...</div>
                <pre id="historyTrend">Loading...</pre>
              </div>
          
              <div class="section success">
                <h2>⏱ Duration Trend Data</h2>
                <div id="durationStatus" class="status">Loading...</div>
                <pre id="durationTrend">Loading...</pre>
              </div>
          
              <div class="section">
                <h2>🔗 Links</h2>
                <ul>
                  <li><a href="./index.html">📈 Main Allure Report</a></li>
                  <li><a href="./history/history-trend.json" target="_blank">📄 Raw History Data</a></li>
                  <li><a href="${{ github.server_url }}/${{ github.repository }}/actions" target="_blank">🔄 GitHub Actions</a></li>
                </ul>
              </div>
            </div>
          
            <script>
              function loadAndDisplay(url, elementId, statusId) {
                fetch(url)
                  .then(response => {
                    if (!response.ok) throw new Error('HTTP ' + response.status);
                    return response.json();
                  })
                  .then(data => {
                    document.getElementById(elementId).textContent = JSON.stringify(data, null, 2);
                    const statusEl = document.getElementById(statusId);
                    statusEl.textContent = '✅ Loaded (' + data.length + ' entries)';
                    statusEl.className = 'status ok';
                    
                    // Check format
                    if (data.length > 0 && data[0].buildOrder) {
                      statusEl.textContent += ' - Format: ✅ Valid';
                    } else {
                      statusEl.textContent += ' - Format: ❌ Invalid';
                    }
                  })
                  .catch(error => {
                    document.getElementById(elementId).textContent = 'Error: ' + error.message;
                    const statusEl = document.getElementById(statusId);
                    statusEl.textContent = '❌ Failed: ' + error.message;
                    statusEl.className = 'status error';
                  });
              }
          
              loadAndDisplay('./history/history-trend.json', 'historyTrend', 'historyStatus');
              loadAndDisplay('./history/duration-trend.json', 'durationTrend', 'durationStatus');
            </script>
          </body>
          </html>
          EOF

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/allure-report
          keep_files: false  # Changed to false to ensure clean deployment
          enable_jekyll: false
          allow_empty_commit: false
          force_orphan: false

      # Deploy to SLT Server
      - name: Deploy to SLT Server
        if: always()
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: target/allure-report/
          remote_path: /var/www/html/selenium-report
          remote_host: ${{ secrets.SLT_HOST }}
          remote_user: ${{ secrets.SLT_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Final verification
      - name: Final History Verification
        if: always()
        run: |
          echo "=== FINAL VERIFICATION ==="
          echo "Build: #${{ github.run_number }}"
          echo "Report URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "Debug URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history-debug.html"
          
          if [ -f "target/allure-report/history/history-trend.json" ]; then
            echo ""
            echo "✅ Final history-trend.json:"
            cat target/allure-report/history/history-trend.json | jq '.'
            
            ENTRY_COUNT=$(jq '. | length' target/allure-report/history/history-trend.json)
            echo ""
            echo "📊 Total entries: $ENTRY_COUNT"
            
            if [ $ENTRY_COUNT -ge 2 ]; then
              echo "✅ Sufficient entries for trend graphs!"
            else
              echo "⚠️  Need to run a few more times to build trend data"
            fi
          fi

      - name: Upload Debug Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-debug-${{ github.run_number }}
          path: |
            target/allure-report/history/
            target/allure-results/
          retention-days: 7
